package jy.zhongye.dao.account;

import jy.zhongye.entity.account.Permission;
import jy.zhongye.entity.account.Role;
import jy.zhongye.entity.account.User;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.List;


@Mapper
@Repository
public interface AccountDao {

//    User
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
    int deleteUser(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
    int insertUser(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
    User selectUser(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
    List<User> selectAllUser();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
    int updateUser(User record);

//    Role
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    int deleteRole(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    int insertRole(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    Role selectRole(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    List<Role> selectAllRole();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated
     */
    int updateRole(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission
     *
     * @mbg.generated
     */

//    Permission
    int deletePermission(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission
     *
     * @mbg.generated
     */
    int insertPermission(Permission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission
     *
     * @mbg.generated
     */
    Permission selectPermission(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission
     *
     * @mbg.generated
     */
    List<Permission> selectAllPermission();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission
     *
     * @mbg.generated
     */
    int updatePermission(Permission record);


    //User-Role
    /***
     * @method getPassword
     * @description
     * @author
     * @date
     * @param        username
     * @return
     */
    String getPassword(String username);

    /***
     * @method listRoles
     * @description
     * @author
     * @date
     * @param        User
     * @return
     */
    List<Role> listRoles(User user);

    /***
     * @method listPermissions
     * @description
     * @author
     * @date
     * @param        userName
     * @return
     */
    List<Permission> listPermissions(User user);

    /***
     * @method listPermissionByRole
     * @description
     * @author
     * @date
     * @param        Role
     * @return
     */
    List<Permission> listPermissionsByRole(Role role);

    /**
     * @Description:
     * @Param: [username]
     * @return: User
     * @Author: Mr.Xuyu
     * @Date: 2019-01-10
     */
    User getUserByUsername(String username);

    /**
     * @Description:
     * @Param: [roleName]
     * @return: Role
     * @Author: Mr.Xuyu
     * @Date: 2019-01-10
     */
    Role getRoleByRoleName(String roleName);

    /**
     * @Description:
     * @Param: [permissionName]
     * @return: Permission
     * @Author: Mr.Xuyu
     * @Date: 2019-01-10
     */
    Permission getPermissionByPermissionName(String permissionName);

    /**
     * @Description:
     * @Param: [user, roles]
     * @return: int
     * @Author: Mr.Xuyu
     * @Date: 2019-01-10
     */
    int userAddRole(User user,Role role);

    /**
     * @Description:
     * @Param: [role, permission]
     * @return: int
     * @Author: Mr.Xuyu
     * @Date: 2019-01-10
     */
    int roleAddPermissions(Role role,Permission permission);

    /**
     * @Description:
     * @Param: [user, role]
     * @return: int
     * @Author: Mr.Xuyu
     * @Date: 2019-01-24
     */
    int userDeleteRole(User user,Role role);

    /**
     * @Description:角色删除权限
     * @Param: [role, permissions]
     * @return: int
     * @Author: Mr.Xuyu
     * @Date: 2019-01-24
     */
    int roleDeletePermission(Role role,Permission permissions);
}
