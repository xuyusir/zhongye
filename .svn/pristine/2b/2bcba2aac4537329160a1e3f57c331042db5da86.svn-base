package jy.zhongye.controller.account;

import jy.zhongye.dao.account.AccountDao;
import jy.zhongye.entity.account.Permission;
import jy.zhongye.entity.account.Role;
import jy.zhongye.entity.account.User;
import jy.zhongye.service.account.AccountService;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

@RestController
@RequestMapping("/account")
public class AccountController {

    @Autowired
    AccountService accountService;
    @Autowired
    AccountDao accountDao;


    /***
     * @method userManage
     * @description
     * @author
     * @date
     * @param
     * @return
     */
    @RequestMapping("/userManage")
    public ModelAndView userManage() {
        ModelAndView m = new ModelAndView("account/userManage");

        //返回所有用户并获取用户拥有角色
        List<User> users = accountService.selectAllUser();
        for (User u : users) {
            Set<Role> s = accountService.listRoles(u);
            u.setRoles(s);
        }

        List<Role> allRoles = accountService.selectAllRole();

        m.addObject("users", users);
        m.addObject("allRoles", allRoles);

        return m;
    }

    /***
     * @method roleManage
     * @description
     * @author
     * @date
     * @param
     * @return
     */
    @RequestMapping("/roleManage")
    public ModelAndView roleManage() {
        ModelAndView m = new ModelAndView("account/roleManage");

        List<Role> roles = accountService.selectAllRole();
        for (Role r : roles) {
            Set<Permission> p = accountService.listPermissionsByRole(r);
            r.setPermissions(p);
        }

        List<Permission> allPermissions = accountService.selectAllPermission();

        m.addObject("roles", roles);
        m.addObject("allPermissions", allPermissions);
        return m;
    }

    /***
     * @method permissionManage
     * @description
     * @author
     * @date
     * @param
     * @return
     */


    @RequestMapping("/permissionManage")
    public ModelAndView permissionManage() {
        ModelAndView m = new ModelAndView("account/permissionManage");

        List<Permission> p = accountService.selectAllPermission();

        m.addObject("permissions", p);
        return m;
    }

    /**
     * @Description:
     * @Param: []
     * @return: java.lang.String
     * @Author: Mr.Xuyu
     * @Date: 2019-01-10
     */
    @RequestMapping("/addUser")
    public String addUser(HttpServletRequest reg, HttpServletResponse response) {

        String username=reg.getParameter("username");
        String password=reg.getParameter("password");
        String[] rolesTem = reg.getParameterValues("roles");

        List<Role> roles = new ArrayList<Role>();
        for (String r : rolesTem) {
            Role role = accountService.getRoleByRoleName(r);
            roles.add(role);
        }

        accountService.addUser(username,password,roles);

        return "ok";
    }

    @RequestMapping("/addRole")
    public String addRole(HttpServletRequest reg, HttpServletResponse response) {

        String roleName=reg.getParameter("roleName");
        String roleDesc=reg.getParameter("roleDesc");
        String[] permissionsTem = reg.getParameterValues("permissions");

        List<Permission> permissions = new ArrayList<Permission>();
        for (String p : permissionsTem) {
            Permission permission = accountService.getPermissionByPermissionName(p);
            permissions.add(permission);
        }

        accountService.addRole(roleName,roleDesc,permissions);

        return "ok";
    }


}
